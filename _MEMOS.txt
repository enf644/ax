
THINK ABOUT
    Подумать над шрифтом Segoi UI
    ☐ https://swagger.io/
    ☐ Стухание сессии - блокировка экрана, предложение продолжить
    ☐ Oath - Авторизация
        ☐ https://developer.okta.com/pricing/
    ☐ Active directory - python
    ☐ Make app to autoupgrade DB with alembic according to latest upgrade script
    dev_appserver.py


How to use Ax:
	Ax Deck - Create page structure and insert Forms, Grids and other web components
	Ax Deck Mobile - View your deck in native Android or ios applicaiton
	Any website - Load AxForms and AxGrids as web components
	GraphQL - Query data from external app
	Slack - See AxForms and AxGrids directrly in Slack chat
	Jira
	SharePoint
	Gmail
    Kubernate application
    Docker container


Who use Ax:
    Personal productivity
    Makers, hackers, developers
    Corporate worker
    Executive


LIMITS
    SQLite and Postgress
    Only X fields
    No Redis
    No ActiveDirectory
    Only English (Later - Russian, Chineese, Indian, Spanish. Media process?)
    No inline-edit
    No Caching
    

NEW DOMAINS
    workflow.ax
    draw.ax
    make.ax
    put.ax
    apps.ax
    ax.parts
    ax.mx
    getax.today
    ax-workflow.com


======================================================================================================================================

home_schema.py -> mutation
main.js -> gql Query
main.js -> actiom
main.js -> mutation


======================================================================================================================================

Idea on apps:
    Copy of personal Sass productivity services for corporate:
        Workflowy clone with addons:
            Web sockets update and multiuser work
            Edit history recording. Scroll timeline to see who did what. (maybe use git?)
            Alt+start to start working on line
            tags with colors
            icons and emoji
            permissions on every level
            Inline ax forms as tags
            Dynamo 
        Trello
    

======================================================================================================================================

В пользователях нужно учесть группу - суперпользователи. 
	Они могут создавать и редактировать только свои объекты.
	Таблица с распределением супер-пользователей по объектам
	Какие группы имеют доступ к редактированию объекта
	Как вариант - Админ дает доступ пользователю или группе на Папку в списке объектов.
		Если доступ есть - пользователь может в этой папке создавать объекты и менять уже созданные


Инсталятор - спрашивает БД, схему для данных, схему для хранения пользователей
	Должно быть задисейблено - Auth0, Cognito, Active Directory и т.д.


Что нужно для Рекрера - 
	Единая БД пользователей
	Каждый клуб в отдельной таблице БД, чтобы можно было их разносить по серверам

========= Lead sources  ==========================================================================================

Lead sources
    INTEGRATIONS
        Slack
        Jira
        Zappier
        Gmail
        Stripe
        GraphQL
        Docker marketplace
        App engine marketplace
        Windows store??
    DIRECT MARKETING (until 2000 users)
        Offer consulting services to one client each week. 
            Each hacker-news article is followed by invite to participate in free consulting session.
            Week auction? Clients compete with each other. (How to filter expensive apps?)
    MEDIA ARTICLES
        Articles are translated to 4 languages. 
        Media contains popular us, china, india, russia sites
        List of media:
            Hacker news
            Reddit
            Medium
            Facebook
            Vk.com
            Twitter
            Google+
            Habr
        Media maybe
            https://dzone.com/
            https://blog.feedspot.com/software_development_blogs/ -> LIST
            YC news            
            Yandex Zen
        Marketing news themes 
            Introducing Ax. Installing Ax and Creating workflow application in 5 minutes.
            Unique features
                GraphQL
                Python tasks
                Wokflow based on d3.js
                New features after launch:
                    Scheduler feature
                    Creating Ax-Fields
                    Caching ax-forms in redis
                    Upgrading procedure
                    Add sentry logging
                    System monitoring
                    Event collecting - Graphite 
                    Logging visualisation
                    Integration of two ax instances. Shared workflow.
                    Backup mechanism
            Comparision with other software and services:
                Sass -> Kissflow, Google App Maker, Zoho creator, Nintex, RunMyProcess, Airtable
                On-premise -> Jira, PEGA , Apian , Microsoft SharePoint, IBM Lotus Notes
            Instructions for running in diferent enviroments:
                App engine detailed instruction
                AWS
                Heroku
                Docker
            Include in all posible listings
                sanic users
                vue users
                wikipedia -> workflow
                alternative listing sites
                everything with 'workflow' keywoard
            Deck as standalone tool
            Building Sass business ontop of Ax
                Billing users inside Ax!!!
            Overview of ax-fields
            Ax technology stack
            Ax benchmark - speed, size            
            1$ implementation - CRM, HelpDesk, Invoices ect
            New integration
            New Ax-Field
            Usage story - robot automation, interesting use-cases
            Recuring posts - Yearly post calendar with recuring types -
                once per year - statistics
                once per month - top 5 iteresting use-cases
                once per month - 
            Online- school teaching how to use AX - additional business
            Personal uses:
                Wedding
                Event registration
    ADS
        Popular service copy. 
            Creating good Ax-marketplace applicaiton. 
            Creating beutiful landing page.
            Create and publish Article to all media
            Ads for "<service-name> aliternative", "<service-name> free"
        1$ Sass service - Like 1$ CRM, 1$ bugtracker, 1$ survey
            Creating good Ax-marketplace applicaiton. 
            Creating beutiful landing page.
            Create and publish Article to all media
            Start Ad compaing with relative queries "crm, helpdesk" ect
    SERVICES
        https://optinmonster.com/


Global Plan
	Release Open Source
	Set payment system
	Meke good documentation
    Make landing
	Blog post once per week
    Run Sass - no free trail. Minimum 10 users.


Landing ideas
    Not describing software, but how it help customer
    Gifs on how to use

			

Pricing
    Free
        Up to 4 users
    Standard - 1$ per user
    Enterprise - 5$ per user
        Ag-grid enterprice
        Redis queing
        Active directory / Google groups


Growing points
    Scale 
        Scale with integrations - insert Ax into something
        Scale with 1$ apps - create apps, run ads
        Scale with Sass services build ontop of Ax
    Marketing team    
        Offer to hosting providers
    Support team
        Team is the same that develops apps.
        Team members talks with clients over phone.
    Developer team
        Python guru
        Vue guru
        Designer (outsource)



Every year devepment is becoming easier and easier.
Today one man can make application that 5 years ago took a 10 people team.
Ax is next step in this process. 
Your grand mother can create sass application with Ax.
Ax have multiple use-cases
    bussiness
    entrepreneurs
    developers


==============================================================================================================================

Releasing new version of Ax


Updading Ax
    pip update - (db schema changed) (new migration .py added)
    on start-up alembic checks schema
    alembic changes database with migration scripts


=================================


1. English
1.121 billion total speakers -> 17.00

2. Chinese
1.107 billion total speakers -> 14.30

3. Hindi
534.2 million total speakers -> 15.40 (from English)

4. Spanish
512.9 million total speakers -> 12.10$

-------------------

5. French
284.9 million total speakers -> 12.10

6. Arabic
273.9 million total speakers -> 15.40 (from English)

7. Russian
265 million total speakers -> 7.7$

8. Bengali
261.8 million total speakers -> 15.40 (from English)

9. Portuguese
236.5 million total speakers -> 16$

10. Indonesian
198.4 million total speakers -> 15.40 (from English)

11. Japanese -> 24.20$


Russian -> English, Chinese, Hindi, Spanish

https://thewordpoint.com/prices

==============================================================================================================================

module_name, package_name, ClassName, method_name, ExceptionName, function_name,
GLOBAL_CONSTANT_NAME, global_var_name, instance_var_name, 
function_parameter_name, local_var_name.

==============================================================================================================================

BaseException
 +-- SystemExit
 +-- KeyboardInterrupt
 +-- GeneratorExit
 +-- Exception
      +-- StopIteration
      +-- StopAsyncIteration
      +-- ArithmeticError
      |    +-- FloatingPointError
      |    +-- OverflowError
      |    +-- ZeroDivisionError
      +-- AssertionError
      +-- AttributeError
      +-- BufferError
      +-- EOFError
      +-- ImportError
      |    +-- ModuleNotFoundError
      +-- LookupError
      |    +-- IndexError
      |    +-- KeyError
      +-- MemoryError
      +-- NameError
      |    +-- UnboundLocalError
      +-- OSError
      |    +-- BlockingIOError
      |    +-- ChildProcessError
      |    +-- ConnectionError
      |    |    +-- BrokenPipeError
      |    |    +-- ConnectionAbortedError
      |    |    +-- ConnectionRefusedError
      |    |    +-- ConnectionResetError
      |    +-- FileExistsError
      |    +-- FileNotFoundError
      |    +-- InterruptedError
      |    +-- IsADirectoryError
      |    +-- NotADirectoryError
      |    +-- PermissionError
      |    +-- ProcessLookupError
      |    +-- TimeoutError
      +-- ReferenceError
      +-- RuntimeError
      |    +-- NotImplementedError
      |    +-- RecursionError
      +-- SyntaxError
      |    +-- IndentationError
      |         +-- TabError
      +-- SystemError
      +-- TypeError
      +-- ValueError
      |    +-- UnicodeError
      |         +-- UnicodeDecodeError
      |         +-- UnicodeEncodeError
      |         +-- UnicodeTranslateError
      +-- Warning
           +-- DeprecationWarning
           +-- PendingDeprecationWarning
           +-- RuntimeWarning
           +-- SyntaxWarning
           +-- UserWarning
           +-- FutureWarning
           +-- ImportWarning
           +-- UnicodeWarning
           +-- BytesWarning
           +-- ResourceWarning

==============================================================================================================================


АРХИТЕКТУРА
	Части архитектуры
		Организация программы
		Основные классы	
		Организация данных	
		Бизнес-правила	
		Пользовательский интерфейс
		Управление ресурсами
		Безопасность
		Производительность
		Масштабируемость	
		Взаимодействие с другими системами
		Интернационализация/локализация
		Ввод-вывод
		Обработка ошибок
		Отказоустойчивость
		Стратегия изменений
	Желаемые характеристики проекта
		Минимальная сложность
		Простота сопровождения
		Слабое сопряжение 
		Расширяемость
		Возможность повторного использования 
		Высокий коэффициент объединения по входу
		Низкий или средний коэффициент разветвления по выходу 
		Портируемость 
		Минимальная, но полная функциональность 
		Стратификация 
		Соответствие стандартным методикам
	Области разработки
		Отказоустойчивость
		Безопасность
		Интернационализация/локализация
		Стратегия изменений
		Производительность и Масштабируемость


===========================================================================



home.js
    forms
    fieldTypes
    actionSnippets
form.js
    formSettings
    fields
    tabs
workflow.js
    roles -> states, actions
    roleUsers
    states
    actions
    actionSettings
    permissions
grids.js
    grids
    columns
    gridSettings
deck.js
    deckItems
users.js
    users
    groups
test.js